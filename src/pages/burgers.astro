---
import Header from "../components/Header/Header.astro";
import BurgerToggle from "../components/BurgerToggle/BurgerToggle.astro";
import Layout from "../layouts/Layout.astro";
import { supabase } from "../supabase/supabase";

const { data: burgers } = await supabase
  .from("burgers")
  .select()
  .order("rank", {
    ascending: true,
  });

if (!burgers) {
  throw new Error("Error fetching burgers");
}
---

<Layout>
  <Header backLink="/">
    <> Burgers </>
    <div class="hidden sm:block float-right" slot="right">
      <BurgerToggle id="desktop" />
    </div>
  </Header>
  <main class="flex flex-col max-w-2xl mx-auto gap-8 w-full">
    <p class="text-center">
      The quest for the best burger never ends, here's how they currently stack
      up.
    </p>
    <div class="sm:hidden self-end">
      <BurgerToggle id="mobile" />
    </div>
    <ol class="list-decimal marker:text-3xl ps-12">
      {
        burgers.map((burger) => (
          <li
            class:list={["pb-6", { hidden: !burger.minnesota }]}
            data-is-minnesota={`${burger.minnesota}`}
          >
            <h2 class="text-3xl	">{burger.name}</h2>
            <a href={burger.url} class="underline">
              {burger.restaurant} - {burger.location}
            </a>
            <p>{burger.description}</p>
          </li>
        ))
      }
    </ol>
  </main>
</Layout>

<script>
  const checkboxes = document.querySelectorAll("[data-burger-toggle]");

  checkboxes.forEach((checkbox) => {
    checkbox?.addEventListener("change", (e) => {
      // Check if the checkbox is checked
      const isChecked = (e.target as HTMLInputElement).checked;

      // If checked, show only Minnesota burgers; otherwise, show all
      const foreignBurgers = document.querySelectorAll(
        '[data-is-minnesota="false"]'
      );

      foreignBurgers.forEach((burger) => {
        if (isChecked) {
          burger.classList.add("hidden");
        } else {
          burger.classList.remove("hidden");
        }
      });
    });
  });
</script>
